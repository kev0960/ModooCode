(()=>{var t={778:()=>{window.onGoogleLogin=function(t){fetch("/auth/goog",{method:"post",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({token:t.credential})}).then((function(t){console.log(t),location.reload()}))}}},e={};function n(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={exports:{}};return t[o](i,i.exports,n),i.exports}(()=>{"use strict";var t=function(t,e,n,o){return new(n||(n=Promise))((function(r,i){function a(t){try{s(o.next(t))}catch(t){i(t)}}function c(t){try{s(o.throw(t))}catch(t){i(t)}}function s(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,c)}s((o=o.apply(t,e||[])).next())}))},e=function(t,e){var n,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(c){return function(s){return function(c){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,c[0]&&(a=0)),a;)try{if(n=1,o&&(r=2&c[0]?o.return:c[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,c[1])).done)return r;switch(o=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,o=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==c[0]&&2!==c[0])){a=0;continue}if(3===c[0]&&(!r||c[1]>r[0]&&c[1]<r[3])){a.label=c[1];break}if(6===c[0]&&a.label<r[1]){a.label=r[1],r=c;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(c);break}r[2]&&a.ops.pop(),a.trys.pop();continue}c=e.call(t,a)}catch(t){c=[6,t],o=0}finally{n=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,s])}}},o=function(){function n(){this.last_comment_index_=0,this.comments_=new Map,this.root_comments_=[],this.num_total_comments_=getNumTotalComments()}return n.prototype.LoadComments=function(){return t(this,void 0,void 0,(function(){var t,n,o,r,i,a,c;return e(this,(function(e){switch(e.label){case 0:return t=window.location.pathname,n=t.substr(t.lastIndexOf("/")+1),[4,fetch("/get-comment",{method:"POST",mode:"cors",cache:"no-cache",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({article_url:n,index_start:this.last_comment_index_})})];case 1:return[4,e.sent().json()];case 2:for(o=e.sent(),r=o.comments,i=0,a=r;i<a.length;i++)c=a[i],this.comments_.set(c.comment_id,c);return this.last_comment_index_+=50,[2]}}))}))},n.prototype.PostComment=function(n,o,r,i){return t(this,void 0,void 0,(function(){var t,a;return e(this,(function(e){return t=window.location.href,a=t.substr(t.lastIndexOf("/")+1),document.getElementById("posted-comment"),grecaptcha.ready((function(){grecaptcha.execute("6LeE_nYUAAAAAGm9qTa71IwvvayWV9Q7flqNkto2",{action:"Comment"}).then((function(t){fetch("/write-comment",{method:"POST",mode:"cors",cache:"no-cache",headers:{"Content-Type":"application/json"},body:JSON.stringify({parent_id:n,content:o,password:r||"",author_name:i,article_url:a,captcha_token:t})}).then((function(t){console.log(t),document.getElementById("adding-comment").hidden=!0,location.reload()}))}))})),[2]}))}))},n.prototype.ComputeRootComments=function(){var t=Array.from(this.comments_.keys()).sort((function(t,e){return t-e})),e=new Set;this.root_comments_=[];for(var n=0,o=t;n<o.length;n++){var r=o[n];e.has(r)||(this.root_comments_.push(this.comments_.get(r)),this.VisitAllChildComments(r,e))}this.root_comments_=this.root_comments_.reverse()},n.prototype.VisitAllChildComments=function(t,e){var n=this.comments_.get(t);if(n){e.add(t);for(var o=0,r=n.reply_ids||[];o<r.length;o++){var i=r[o];this.VisitAllChildComments(i,e)}}},n.prototype.CreateCommentList=function(){var t=document.createElement("ul");t.classList.add("comment-list"),t.id="root-comment-list";for(var e=0,n=this.root_comments_;e<n.length;e++)for(var o=n[e],r=0,i=this.CreateComment(o.comment_id);r<i.length;r++){var a=i[r];t.appendChild(a)}return t},n.prototype.CreateComment=function(t){var e,n=this.comments_.get(t);if(n){var o=document.createElement("li");o.classList.add("comment");var r=document.createElement("div");r.classList.add("comment-profile");var i=document.createElement("img");n.image_link?(i.src=n.image_link,i.alt="프로필 사진"):(i.src="./img/unknown_person.png",i.alt="프로필 사진 없음"),r.appendChild(i),o.appendChild(r);var a=document.createElement("div");a.classList.add("comment-info");var c=document.createElement("div");c.classList.add("comment-header");var s=function(t,e){var n=document.createElement("span");return n.classList.add(t),n.textContent=e,n};c.appendChild(s("comment-author",n.author_name||"")),c.appendChild(s("comment-date",n.comment_date||"")),a.appendChild(c);var l=document.createElement("div");l.classList.add("comment-content"),l.textContent=n.content,a.appendChild(l);var d=document.createElement("div");if(d.classList.add("comment-action"),d.id="comment-id-"+t,d.appendChild(s("comment-upvote","추천")),d.appendChild(s("comment-reply","답글")),d.appendChild(s("comment-delete","답글 삭제")),a.appendChild(d),o.appendChild(a),!(null===(e=n.reply_ids)||void 0===e?void 0:e.length))return[o];var h=document.createElement("ul");h.classList.add("comment-list");for(var u=0,m=n.reply_ids;u<m.length;u++)for(var p=m[u],_=0,f=this.CreateComment(p);_<f.length;_++){var v=f[_];h.append(v)}return[o,h]}},n.prototype.GetNumTotalComments=function(){return this.num_total_comments_},n.prototype.GetLastCommentIndex=function(){return this.last_comment_index_},n}(),r=function(){function t(){this.last_position=window.scrollY,this.time_to_update_toc=!0,this.scroll_down_event_handlers=[],this.scroll_up_event_handlers=[],this.InstallScrollEventHandler()}return t.prototype.InstallScrollEventHandler=function(){var t=this;window.addEventListener("scroll",(function(e){t.time_to_update_toc&&(window.requestAnimationFrame((function(){if(t.time_to_update_toc=!0,t.last_position>window.scrollY)for(var e=0,n=t.scroll_up_event_handlers;e<n.length;e++)(0,n[e])();else for(var o=0,r=t.scroll_down_event_handlers;o<r.length;o++)(0,r[o])();t.last_position=window.scrollY})),t.time_to_update_toc=!1)}))},t.prototype.RegisterScrollUpHandler=function(t){this.scroll_up_event_handlers.push(t)},t.prototype.RegisterScrollDownHandler=function(t){this.scroll_down_event_handlers.push(t)},t}();function i(t){for(var e=0;e<t.length&&" "==t[e];e++);return t.substring(e)}var a=function(){function t(){this.toc_headers_=[],this.time_to_update_toc=!0,this.prev_highlighted=0,this.FetchHeaders()}return t.prototype.FetchHeaders=function(){for(var t,e=0,n=document.querySelectorAll(".header-general");e<n.length;e++){var o=n[e],r=i(o.innerText),a="h"!=(t=o.tagName)[0]&&"H"!=t[0]?-1:parseInt(t.substring(1)),c=o.id,s=o.getBoundingClientRect().top+window.scrollY;this.toc_headers_.push({header_name:r,header_tag:a,header_id:c,header_pos:s,header_elem_link:null})}},t.prototype.RecursiveTOCCreator=function(t,e,n){for(var o=null,r=e;r<this.toc_headers_.length;r++){var i=this.toc_headers_[r];if(i.header_tag<n)return r;if(i.header_tag>n){var a=document.createElement("ol");a.className="toc-list",o.appendChild(a),r=this.RecursiveTOCCreator(a,r,i.header_tag),r--}else{var s=c(i);i.header_elem_link=s.firstChild,t.appendChild(s),o=s}}return r},t.prototype.CreateTOCList=function(){var t=document.querySelector(".toc-list");null!=t&&(this.RecursiveTOCCreator(t,0,this.toc_headers_[0].header_tag),this.InstallTOCEventHandlers())},t.prototype.InstallTOCEventHandlers=function(){var t=this;window.addEventListener("scroll",(function(){var e=window.scrollY;t.time_to_update_toc&&(window.requestAnimationFrame((function(){t.time_to_update_toc=!0;var n=t.GetCurrentActiveTOCItem(e);t.HighlightActiveItem(n)})),t.time_to_update_toc=!1)}))},t.prototype.HighlightActiveItem=function(t){this.toc_headers_[this.prev_highlighted].header_elem_link.className="toc-item-link",this.toc_headers_[t].header_elem_link.className="toc-item-link toc-active-item",this.prev_highlighted=t},t.prototype.InstallLinkClickHandler=function(){for(var t=function(t){t.header_elem_link.onclick=function(e){window.scrollTo(0,t.header_pos-150),console.log(t.header_pos-150)}},e=0,n=this.toc_headers_;e<n.length;e++)t(n[e])},t.prototype.GetCurrentActiveTOCItem=function(t){if(t<this.toc_headers_[0].header_pos)return 0;for(var e,n=0;n<this.toc_headers_.length&&n!=this.toc_headers_.length-1;n++)if(this.toc_headers_[n].header_pos<=t&&t<this.toc_headers_[n+1].header_pos)return t-this.toc_headers_[n].header_pos>this.toc_headers_[n+1].header_pos-t&&(void 0,(e=this.toc_headers_[n+1].header_elem_link.getBoundingClientRect()).top>=0&&e.left>=0&&e.right<=(window.innerWidth||document.documentElement.clientWidth)&&e.bottom<=(window.innerHeight||document.documentElement.clientHeight))?n+1:n;return n},t}();function c(t){var e=document.createElement("li");e.className="toc-list-item";var n=document.createElement("span");return n.className="toc-item-link",n.textContent=t.header_name,e.appendChild(n),e}n(778);function s(){return t=this,e=void 0,i=function(){var t;return function(t,e){var n,o,r,i,a={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function c(c){return function(s){return function(c){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,c[0]&&(a=0)),a;)try{if(n=1,o&&(r=2&c[0]?o.return:c[0]?o.throw||((r=o.return)&&r.call(o),0):o.next)&&!(r=r.call(o,c[1])).done)return r;switch(o=0,r&&(c=[2&c[0],r.value]),c[0]){case 0:case 1:r=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,o=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(!((r=(r=a.trys).length>0&&r[r.length-1])||6!==c[0]&&2!==c[0])){a=0;continue}if(3===c[0]&&(!r||c[1]>r[0]&&c[1]<r[3])){a.label=c[1];break}if(6===c[0]&&a.label<r[1]){a.label=r[1],r=c;break}if(r&&a.label<r[2]){a.label=r[2],a.ops.push(c);break}r[2]&&a.ops.pop(),a.trys.pop();continue}c=e.call(t,a)}catch(t){c=[6,t],o=0}finally{n=r=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,s])}}}(this,(function(e){switch(e.label){case 0:return(n=new a).CreateTOCList(),n.InstallLinkClickHandler(),(new r).RegisterScrollUpHandler((function(){})),[4,(t=new o).LoadComments()];case 1:return e.sent(),t.ComputeRootComments(),console.log("html ",t.CreateCommentList()),t.GetNumTotalComments()>=t.GetLastCommentIndex()&&(console.log("not hidden"),document.getElementById("button-box").hidden=!1),[2]}var n}))},new((n=void 0)||(n=Promise))((function(o,r){function a(t){try{s(i.next(t))}catch(t){r(t)}}function c(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,c)}s((i=i.apply(t,e||[])).next())}));var t,e,n,i}window.onload=function(){s()}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,